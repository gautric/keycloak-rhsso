{
	"info": {
		"_postman_id": "d1906bf9-5c22-4940-b80a-aefd2345b66a",
		"name": "RHSSO",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Managment",
			"item": [
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"user_id\", jsonData[0].id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{server}}/auth/admin/realms/{{realm_target}}/users",
							"host": [
								"{{server}}"
							],
							"path": [
								"auth",
								"admin",
								"realms",
								"{{realm_target}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//var jsonData = JSON.parse(responseBody);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"userRandomId\", Math.floor(Math.random() * 1000));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \n    \"firstName\":\"{{$randomFirstName}}\",\n    \"lastName\":\"{{$randomLastName}}\",\n    \"email\":\"{{username}}_{{userRandomId}}@example.com\", \n    \"enabled\":\"true\", \n    \"username\":\"{{username}}_{{userRandomId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/auth/admin/realms/example/users",
							"host": [
								"{{server}}"
							],
							"path": [
								"auth",
								"admin",
								"realms",
								"example",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users Count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//var jsonData = JSON.parse(responseBody);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{server}}/auth/admin/realms/{{realm_target}}/users/count",
							"host": [
								"{{server}}"
							],
							"path": [
								"auth",
								"admin",
								"realms",
								"{{realm_target}}",
								"users",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User {{user_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//var jsonData = JSON.parse(responseBody);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{server}}/auth/admin/realms/{{realm_target}}/users/{{user_id}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"auth",
								"admin",
								"realms",
								"{{realm_target}}",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users by {{username}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_id\", jsonData[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{server}}/auth/admin/realms/{{realm_target}}/users?username={{username}}_{{userRandomId}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"auth",
								"admin",
								"realms",
								"{{realm_target}}",
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}_{{userRandomId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Token Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "admin-cli",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{test_user}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{test_password}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{server}}/auth/realms/{{realm}}/protocol/openid-connect/token",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"realms",
						"{{realm}}",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get OIDC Conf",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{server}}/auth/realms/{{realm}}/.well-known/openid-configuration",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"realms",
						"{{realm}}",
						".well-known",
						"openid-configuration"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Keys",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{server}}/auth/realms/{{realm}}/protocol/openid-connect/certs",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"realms",
						"{{realm}}",
						"protocol",
						"openid-connect",
						"certs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "admin-cli",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{test_user}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{test_password}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{server}}/auth/realms/{{realm}}/protocol/openid-connect/token",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"realms",
						"{{realm}}",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Clients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"user_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/clients",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Client {{client_id}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"//postman.setEnvironmentVariable(\"user_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/clients/{{client_id}}",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"clients",
						"{{client_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//var jsonData = JSON.parse(responseBody);",
							"",
							"//postman.setEnvironmentVariable(\"user_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"clientId\": \"{{clientId}}\",\n    \"rootUrl\": \"http://example.com:8080\",\n    \"adminUrl\": \"http://example.com:8080\",\n    \"baseUrl\": \"/js-console\",\n    \"surrogateAuthRequired\": false,\n    \"enabled\": true,\n    \"alwaysDisplayInConsole\": false,\n    \"clientAuthenticatorType\": \"client-secret\",\n    \"redirectUris\": [\n        \"/js-console/\"\n    ],\n    \"webOrigins\": [\n        \"http://example.com:8080/js-console\"\n    ],\n    \"notBefore\": 0,\n    \"bearerOnly\": false,\n    \"consentRequired\": false,\n    \"standardFlowEnabled\": true,\n    \"implicitFlowEnabled\": false,\n    \"directAccessGrantsEnabled\": false,\n    \"serviceAccountsEnabled\": false,\n    \"publicClient\": true,\n    \"frontchannelLogout\": false,\n    \"protocol\": \"openid-connect\",\n    \"attributes\": {\n        \"saml.assertion.signature\": \"false\",\n        \"saml.force.post.binding\": \"false\",\n        \"saml.multivalued.roles\": \"false\",\n        \"saml.encrypt\": \"false\",\n        \"saml.server.signature\": \"false\",\n        \"saml.server.signature.keyinfo.ext\": \"false\",\n        \"exclude.session.state.from.auth.response\": \"false\",\n        \"saml_force_name_id_format\": \"false\",\n        \"saml.client.signature\": \"false\",\n        \"tls.client.certificate.bound.access.tokens\": \"false\",\n        \"saml.authnstatement\": \"false\",\n        \"display.on.consent.screen\": \"false\",\n        \"saml.onetimeuse.condition\": \"false\"\n    },\n    \"authenticationFlowBindingOverrides\": {},\n    \"fullScopeAllowed\": true,\n    \"nodeReRegistrationTimeout\": -1,\n    \"protocolMappers\": [\n        {\n            \"name\": \"Group\",\n            \"protocol\": \"openid-connect\",\n            \"protocolMapper\": \"oidc-group-membership-mapper\",\n            \"consentRequired\": false,\n            \"config\": {\n                \"full.path\": \"true\",\n                \"id.token.claim\": \"true\",\n                \"access.token.claim\": \"true\",\n                \"claim.name\": \"group\",\n                \"userinfo.token.claim\": \"true\"\n            }\n        }\n    ],\n    \"defaultClientScopes\": [\n        \"web-origins\",\n        \"role_list\",\n        \"profile\",\n        \"roles\",\n        \"email\"\n    ],\n    \"optionalClientScopes\": [\n        \"address\",\n        \"phone\",\n        \"offline_access\",\n        \"microprofile-jwt\"\n    ],\n    \"access\": {\n        \"view\": true,\n        \"configure\": true,\n        \"manage\": true\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/clients",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Client {{clientId}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"client_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/clients?clientId={{clientId}}&search=false",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"clients"
					],
					"query": [
						{
							"key": "clientId",
							"value": "{{clientId}}"
						},
						{
							"key": "search",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Groups",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"group_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/groups",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"groups"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//var jsonData = JSON.parse(responseBody);",
							"",
							"//postman.setEnvironmentVariable(\"group_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"postman.setEnvironmentVariable(\"groupRandomId\", Math.floor(Math.random() * 1000));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"name\": \"group{{groupRandomId}}\",\n        \"path\": \"/group{{groupRandomId}}\",\n        \"subGroups\": []\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/groups",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"groups"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add User To Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//var jsonData = JSON.parse(responseBody);",
							"",
							"//postman.setEnvironmentVariable(\"group_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"postman.setEnvironmentVariable(\"groupRandomId\", Math.floor(Math.random() * 1000));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"realm\": \"{{realm_target}}\",\n    \"userId\": \"{{user_id}}\",\n    \"groupId\": \"{{group_id}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/users/{{user_id}}/groups/{{group_id}}",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"users",
						"{{user_id}}",
						"groups",
						"{{group_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User from Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//var jsonData = JSON.parse(responseBody);",
							"",
							"//postman.setEnvironmentVariable(\"group_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"postman.setEnvironmentVariable(\"groupRandomId\", Math.floor(Math.random() * 1000));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/users/{{user_id}}/groups/{{group_id}}",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"users",
						"{{user_id}}",
						"groups",
						"{{group_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Group by name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"group_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/groups?search={{groupRandomId}}",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"groups"
					],
					"query": [
						{
							"key": "search",
							"value": "{{groupRandomId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Roles for Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"role_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/clients/{{client_id}}/roles",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"clients",
						"{{client_id}}",
						"roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Role for Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//var jsonData = JSON.parse(responseBody);",
							"",
							"//postman.setEnvironmentVariable(\"group_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"postman.setEnvironmentVariable(\"roleRandomId\", Math.floor(Math.random() * 1000));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"name\": \"role_client_{{roleRandomId}}\",\n        \"clientRole\": true\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/clients/{{client_id}}/roles",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"clients",
						"{{client_id}}",
						"roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Role for Client by name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var list = (jsonData).length;",
							"",
							"for (var i = 0; i < list; i++) ",
							"{",
							"    if(jsonData[i].name == 'role_client_'+ postman.getEnvironmentVariable(\"roleRandomId\"))",
							"    {",
							"        postman.setEnvironmentVariable(\"role_id\", jsonData[i].id);",
							"        postman.setEnvironmentVariable(\"role_name\", jsonData[i].name);",
							"    }",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/clients/{{client_id}}/roles",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"clients",
						"{{client_id}}",
						"roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add client-level roles to the user role mapping",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//var jsonData = JSON.parse(responseBody);",
							"",
							"//postman.setEnvironmentVariable(\"group_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//postman.setEnvironmentVariable(\"roleRandomId\", Math.floor(Math.random() * 1000));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\" : \"{{role_id}}\",\n        \"name\": \"{{role_name}}\",\n        \"clientRole\": true\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/groups/{{group_id}}/role-mappings/clients/{{client_id}}",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"groups",
						"{{group_id}}",
						"role-mappings",
						"clients",
						"{{client_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Roles for Realm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"role_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/roles",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Role for Realm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//var jsonData = JSON.parse(responseBody);",
							"",
							"//postman.setEnvironmentVariable(\"group_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"postman.setEnvironmentVariable(\"roleRandomId\", Math.floor(Math.random() * 1000));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"name\": \"role_realm_{{roleRandomId}}\",\n        \"clientRole\": false\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/roles",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Role for Realm by name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var list = (jsonData).length;",
							"",
							"for (var i = 0; i < list; i++) ",
							"{",
							"    if(jsonData[i].name == 'role_realm_'+ postman.getEnvironmentVariable(\"roleRandomId\"))",
							"    {",
							"        postman.setEnvironmentVariable(\"role_id\", jsonData[i].id);",
							"        postman.setEnvironmentVariable(\"role_name\", jsonData[i].name);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/roles?seach=role_client_{{roleRandomId}}",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"roles"
					],
					"query": [
						{
							"key": "seach",
							"value": "role_client_{{roleRandomId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add realm-level role mappings to the user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//var jsonData = JSON.parse(responseBody);",
							"",
							"//postman.setEnvironmentVariable(\"group_id\", jsonData[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"postman.setEnvironmentVariable(\"roleRandomId\", Math.floor(Math.random() * 1000));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\" : \"{{role_id}}\",\n        \"name\": \"{{role_name}}\",\n        \"clientRole\": false\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server}}/auth/admin/realms/{{realm_target}}/groups/{{group_id}}/role-mappings/realm",
					"host": [
						"{{server}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"{{realm_target}}",
						"groups",
						"{{group_id}}",
						"role-mappings",
						"realm"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var client_id      = pm.collectionVariables.get(\"client_id\");",
					"var client_secret  = pm.collectionVariables.get(\"client_secret\");",
					"var token_endpoint = pm.collectionVariables.get(\"token_endpoint\");",
					"var scope          = pm.collectionVariables.get(\"scope\");",
					"",
					"",
					"var server = postman.getEnvironmentVariable(\"server\");",
					"var realm = postman.getEnvironmentVariable(\"realm\");",
					"//var server = postman.getEnvironmentVariable(\"server\");",
					"",
					"",
					"var token_endpoint = server + \"/auth/realms/\" + realm + \"/protocol/openid-connect/token\";",
					"",
					"var details = {",
					"   \"grant_type\" : \"client_credentials\",",
					"   \"scope\" : scope",
					"}",
					"",
					"var details = {",
					"    \"client_id\": postman.getEnvironmentVariable(\"realm\"),",
					"    \"username\": postman.getEnvironmentVariable(\"test_user\"),",
					"    \"password\": postman.getEnvironmentVariable(\"test_password\"),",
					"    \"grant_type\": \"password\"  ",
					"}",
					"",
					"",
					"",
					"var formBody = [];",
					"",
					"for (var property in details) {",
					"  var encodedKey = encodeURIComponent(property);",
					"  var encodedValue = encodeURIComponent(details[property]);",
					"  formBody.push(encodedKey + \"=\" + encodedValue);",
					"}",
					"",
					"//formBody = formBody.join(\"&\");",
					"pm.sendRequest({",
					"    url: token_endpoint,",
					"    method: 'POST',",
					"    header: {",
					"        'Content-Type': 'application/x-www-form-urlencoded'",
					"    },",
					"    body: {",
					"        mode: 'urlencoded',",
					"        urlencoded: [",
					"            {key: \"client_id\", value: \"admin-cli\", disabled: false},",
					"            {key: \"username\", value: pm.environment.get(\"test_user\"), disabled: false},",
					"            {key: \"password\", value: pm.environment.get(\"test_password\"), disabled: false},",
					"            {key: \"grant_type\", value: \"password\", disabled: false}",
					"        ]",
					"    }",
					"},  function(err, response) {",
					"    const jsonResponse = response.json();",
					"    console.log(jsonResponse);",
					"   // pm.collectionVariables.set(\"access_token\", jsonResponse.access_token);",
					"    postman.setEnvironmentVariable(\"access_token\", jsonResponse.access_token);",
					"   // console.log(pm.collectionVariables.get(\"access_token\"));",
					"}); ",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "toto",
			"value": ""
		}
	]
}